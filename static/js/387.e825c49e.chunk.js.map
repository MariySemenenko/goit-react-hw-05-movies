{"version":3,"file":"static/js/387.e825c49e.chunk.js","mappings":"mOAEaA,EAAKC,EAAAA,EAAAA,GAAH,+CAGFC,EAASD,EAAAA,EAAAA,EAAH,0EAKNE,EAAIF,EAAAA,EAAAA,EAAH,6FAKDG,EAAQH,EAAAA,EAAAA,EAAH,oD,SCWlB,EAtBgB,WACd,OAAsCI,EAAAA,EAAAA,KAA9BC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,UAExB,OACE,iCACE,SAACR,EAAD,UACGM,EAAQG,OAAS,EAChBH,EAAQI,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,2BACE,UAACX,EAAD,sBAAiBS,MACjB,UAACR,EAAD,uBAAaS,OAFNC,EADC,KAOZ,SAACT,EAAD,yCAGHI,IAAa,SAACM,EAAA,EAAD,IACbP,IAAS,yBAAMA,MAGrB,C,yHCrBYF,EAAqB,WAChC,OAA8BU,EAAAA,EAAAA,UAAS,IAAvC,eAAOT,EAAP,KAAgBU,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOR,EAAP,KAAcU,EAAd,KACA,GAAkCF,EAAAA,EAAAA,UAAS,MAA3C,eAAOP,EAAP,KAAkBU,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACRC,EAAcH,EACf,GAAE,CAACA,IAEJ,IAAMG,EAAa,mCAAG,WAAMH,GAAN,8EACpBD,GAAa,GADO,mBAGYK,EAAAA,EAAAA,IAAgBJ,GAH5B,OAGZK,EAHY,OAIlBR,EAAWQ,GAJO,gDAMlBP,EAAS,KAAMQ,SANG,yBAQlBP,GAAa,GARK,4EAAH,sDAYnB,MAAO,CAAEZ,QAAAA,EAASC,MAAAA,EAAOC,UAAAA,EAC1B,C,+LCxBDkB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,+GAENF,EAAAA,EAAAA,IAAA,mCAAsCC,IAFhC,uBAErBE,EAFqB,EAErBA,KAFqB,kBAGtBA,EAAKC,SAHiB,gCAK7BC,QAAQC,IAAI,KAAMP,SALW,yDAAH,qDASjBQ,EAAgB,mCAAG,WAAMC,GAAN,kGAELR,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DO,IAHzD,uBAEpBL,EAFoB,EAEpBA,KAFoB,kBAKrBA,EAAKC,SALgB,gCAO5BC,QAAQC,IAAI,KAAMP,SAPU,yDAAH,sDAWhBU,EAAe,mCAAG,WAAMhB,GAAN,kGAGJO,EAAAA,EAAAA,IAAA,gBACZP,EADY,oBACOQ,EADP,4CAHI,uBAGnBE,EAHmB,EAGnBA,KAHmB,kBAMpBA,GANoB,gCAQ3BE,QAAQC,IAAI,KAAMP,SARS,yDAAH,sDAYfW,EAAe,mCAAG,WAAMjB,GAAN,kGAEJO,EAAAA,EAAAA,IAAA,gBACZP,EADY,4BACeQ,EADf,oBAFI,uBAEnBE,EAFmB,EAEnBA,KAFmB,kBAKpBA,EAAKQ,MALe,gCAO3BN,QAAQC,IAAI,KAAMP,SAPS,yDAAH,sDAUfF,EAAe,mCAAG,WAAMJ,GAAN,kGAEJO,EAAAA,EAAAA,IAAA,gBACZP,EADY,4BACeQ,EADf,2BAFI,uBAEnBE,EAFmB,EAEnBA,KAFmB,kBAKpBA,EAAKC,SALe,gCAO3BC,QAAQC,IAAI,KAAMP,SAPS,yDAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","hooks/useGetMovieReviews.jsx","serviceApp/serviceApp.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n    list-style: none;\n`\nexport const Author = styled.p`\n    font-size: 20px;\n    color: cornflowerblue;\n`\n\nexport const P = styled.p`\n    font-size: 16px;\n    color: cornflowerblue;\n    width: 800px;\n`\nexport const Color = styled.p`\n  color: cornflowerblue;  \n`","import { Loader } from 'components/Loader/Loader';\nimport { useGetMovieReviews } from 'hooks/useGetMovieReviews';\nimport { Ul, Author, P, Color } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { reviews, error, isLoading } = useGetMovieReviews();\n  // console.log(reviews)\n  return (\n    <>\n      <Ul>\n        {reviews.length > 0 ? (\n          reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <Author>Author: {author}</Author>\n              <P>Content: {content}</P>\n            </li>\n          ))\n        ) : (\n          <Color>There are no reviews yet</Color>\n        )}\n      </Ul>\n      {isLoading && <Loader />}\n      {error && <div>{error}</div>}\n    </>\n  );\n};\nexport default Reviews;\n","import { getMovieReviews } from 'serviceApp/serviceApp';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const useGetMovieReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    moviesReviews(movieId);\n  }, [movieId]);\n\n  const moviesReviews = async movieId => {\n    setIsLoading(true);\n    try {\n      const byMoviesReviews = await getMovieReviews(movieId);\n      setReviews(byMoviesReviews);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return { reviews, error, isLoading };\n};\n","//запити для фільмів\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2fe1a8067af2c3048e3f8cd6829927fa';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n    return data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMoviesByQuery = async query => {\n  try {\n    const { data } = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    return data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  // console.log(movieId)\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US&external_source=imdb_id`\n    );\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data.cast;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"names":["Ul","styled","Author","P","Color","useGetMovieReviews","reviews","error","isLoading","length","map","author","content","id","Loader","useState","setReviews","setError","setIsLoading","movieId","useParams","useEffect","moviesReviews","getMovieReviews","byMoviesReviews","message","axios","API_KEY","getTrendingMovies","data","results","console","log","getMoviesByQuery","query","getMovieDetails","getMovieCredits","cast"],"sourceRoot":""}