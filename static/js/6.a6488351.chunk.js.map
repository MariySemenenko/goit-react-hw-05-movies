{"version":3,"file":"static/js/6.a6488351.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","hooks/useFetchTrending.jsx","hooks/useGetMovieDetails.jsx","hooks/useMoviesByQuery.jsx","hooks/useGetMovieCredits.jsx","hooks/useGetMovieReviews.jsx","pages/Movies.styled.jsx","pages/Movies.jsx","serviceApp/serviceApp.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Links = styled(Link)`\n  color: cornflowerblue;\n\n  &.active {\n    color: black;\n  }\n`;\n\nexport const Li = styled.li`\n  padding-top: 10px;\n  list-style: none;\n`;\n","//тут рендериться один список фільмів для двох сторінок Home та Movies\n\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Links, Li } from './MoviesList.styled';\n\n//створюю посилання на фільми\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <ul>\n        {movies.map(\n          (\n            { id, title, original_title, name } //дістаю значення з фільмів {id, title, original_title, name}\n          ) => (\n            <Li key={id}>\n              <Links to={`/movies/${id}`} state={{ from: location }}>\n                {title || name || original_title}\n              </Links>\n            </Li>\n          )\n        )}\n      </ul>\n    </div>\n  );\n};\n//при нажиманні на один фільм нас виводить на сторінку MovieDetails та виводиться інфо про даний фільм\n//<Link to={`/movies/${id}`} state={{from: location}} >\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n};\n","//цей хук для сторінки Home\n\nimport { useEffect, useState } from \"react\";\nimport { getTrendingMovies } from \"serviceApp/serviceApp\";\n\nexport const useFetchTrending = () => {\n    \n    //Ініціалізую стан для зберігання отриманих фільмів\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(null);\n\n    useEffect (() => {\n        \n        setIsLoading(true);\n        const getTrending = async () => {\n            \n            try {\n             const movies = await getTrendingMovies();\n             setMovies(movies) \n            //  console.log(movies) \n            } catch (error) {\n                setError(error.message)   \n            } finally {\n                setIsLoading(false) \n            }\n        } \n        getTrending();\n    }, [])\n\nreturn {movies, error, isLoading}\n}","//отримую деталі одного фільму для сторінки pages/MovieDetails\n\nimport { useEffect, useState } from \"react\";\nimport { getMovieDetails } from \"serviceApp/serviceApp\";\nimport { useParams } from \"react-router-dom\"; \n\nexport const useGetMovieDetails = () => {\n\n    const [movie, setMovie] = useState(null);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(null);\n    const { movieId } = useParams();\n\n\n    useEffect(() => { \n        movieDetails(movieId);\n    }, [movieId]);\n   \n    const movieDetails = async (movieId) => {\n        \n        setIsLoading(true);\n        try {\n            const data = await getMovieDetails(movieId);\n            setMovie(data);\n           \n        } catch (error) {\n            setError(error.message);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return { movie, error, isLoading };\n    \n};\n\n","import { useEffect, useState } from 'react';\nimport { getMoviesByQuery } from 'serviceApp/serviceApp';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const useMoviesByQuery = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n\n  useEffect(() => {\n    setIsLoading(true);\n    const moviesQuery = async () => {\n      try {\n        if (!query) return;\n        const data = await getMoviesByQuery(query);\n\n        if (data.length === 0) {\n          return alert('We not find movies');\n        }\n        setMovies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    moviesQuery();\n  }, [query]);\n\n  return { movies, error, isLoading, setSearchParams };\n};\n","import { useEffect, useState } from \"react\";\nimport { getMovieCredits } from \"serviceApp/serviceApp\";\nimport { useParams } from \"react-router-dom\"; \n\nexport const useGetMovieCredits = () => {\n\n    const [credit, setCredit] = useState([]);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(null);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        moviesCredit(movieId)\n        \n    }, [movieId]);\n\n    const moviesCredit = async (movieId) => {\n        setIsLoading(true);\n        try {\n            const byCredit = await getMovieCredits(movieId);\n            setCredit(byCredit);\n            // console.log(byCredit)\n        } catch (error) {\n            setError(error.message);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n   \n    return { credit, error, isLoading, };\n\n}","import { getMovieReviews } from 'serviceApp/serviceApp';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const useGetMovieReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    moviesReviews(movieId);\n  }, [movieId]);\n\n  const moviesReviews = async movieId => {\n    setIsLoading(true);\n    try {\n      const byMoviesReviews = await getMovieReviews(movieId);\n      setReviews(byMoviesReviews);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return { reviews, error, isLoading };\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-top: 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  color: cornflowerblue;\n  outline: none;\n\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1), 0 0 8px cornflowerblue;\n  &:hover {\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2), 0 0 8px cornflowerblue;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-left: 20px;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  color: cornflowerblue;\n\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1), 0 0 8px cornflowerblue;\n\n  &:hover {\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2), 0 0 8px cornflowerblue;\n  }\n\n  &:active {\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1), 0 0 4px cornflowerblue;\n  }\n`;\n","//виконую пошук фільмів далі\n//список фільмів на цій сторінці рендериться на сторінці MoviesList\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useMoviesByQuery } from 'hooks';\nimport { useState } from 'react';\nimport { Form, Input, Button } from './Movies.styled';\n\nconst Movies = () => {\n  const [name, setName] = useState('');\n\n  const { movies, error, isLoading, setSearchParams } = useMoviesByQuery();\n\n  const handleChange = e => {\n    setName(e.currentTarget.value.toLowerCase().trim());\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!name) {\n      return alert('Please enter query');\n    }\n    setSearchParams(name !== '' ? { query: name } : {}); //зчитую query з хука useMoviesByQuery\n  };\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          value={name}\n          placeholder=\"movie name\"\n          onChange={handleChange}\n          autoFocus\n        />\n\n        <Button disabled={!name} type=\"submit\">\n          Search\n        </Button>\n      </Form>\n      {isLoading && <Loader />}\n      {error && <p>Something went wrong</p>}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\nexport default Movies;\n ","//запити для фільмів\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2fe1a8067af2c3048e3f8cd6829927fa';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n    return data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMoviesByQuery = async query => {\n  try {\n    const { data } = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    return data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  // console.log(movieId)\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US&external_source=imdb_id`\n    );\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data.cast;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"names":["Links","styled","Link","Li","MoviesList","movies","location","useLocation","map","id","title","original_title","name","to","state","from","useFetchTrending","useState","setMovies","error","setError","isLoading","setIsLoading","useEffect","getTrending","getTrendingMovies","message","useGetMovieDetails","movie","setMovie","movieId","useParams","movieDetails","getMovieDetails","data","useMoviesByQuery","useSearchParams","searchParams","setSearchParams","query","get","moviesQuery","getMoviesByQuery","length","alert","useGetMovieCredits","credit","setCredit","moviesCredit","getMovieCredits","byCredit","useGetMovieReviews","reviews","setReviews","moviesReviews","getMovieReviews","byMoviesReviews","Form","Input","Button","setName","onSubmit","e","preventDefault","type","value","placeholder","onChange","currentTarget","toLowerCase","trim","autoFocus","disabled","Loader","axios","API_KEY","results","console","log","cast"],"sourceRoot":""}